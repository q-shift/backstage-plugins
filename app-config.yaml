app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}


# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

scaffolder:
# see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    # Local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # Local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    # Local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://api.qshift.snowdrop.dev:6443 # https://kubernetes.default.svc
          name: ocp-qshift
          skipTLSVerify: true
          authProvider: 'serviceAccount'
          skipMetricsLookup: true
          serviceAccountToken: eyJhbGciOiJSUzI1NiIsImtpZCI6Ik1tbGtkcWpzNGNBcTRLS2ktU2I3ZVRaWlBMSFZYTHNQU0xHYWdObGtMdFEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJiYWNrc3RhZ2UiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoibXktYmFja3N0YWdlLXRva2VuLXh0Z2Y2Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6Im15LWJhY2tzdGFnZSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjJmNWFmMGZkLTYyYTctNDMxNS04MDY2LTI3NGYwMjVhNDZkMSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpiYWNrc3RhZ2U6bXktYmFja3N0YWdlIn0.jKHL4s6qgOvhPTiBu-XQRSmkE8FmFht5ige56VTqWHViY9aQBJrtzsYtiNOy9GceB3sVGMFkMELHBszTTcBD9yNyYQp7wtCfqF1T0udYDct5FTKpcCaK5SskZQzy5ZXXbRVlUxFcQu88LUZZHZXBLDDzW6XGuiyLWbhjKJQQxHfqpBjSIRfeAAevwPbKsYAKQyrwj9jeYVrBwYNzmhobCXr0RkBopiEavAAL57RKOfHuTOR0fSD2dgmFyo3YxdMFGxq8gzXNseFMhno7f5jfIR1FhY1V0HXu-Hszx3zBZgf7vzecOQtz4DRVcbcpuQtn0G9Y9W-OEo8cLHbDs5z01T2doPxMcsmgDoFTMcrSWIwA6vrPaZaZxpNNzpoue_gXrzALGZ4JjV6ogUfrbYL-byVMwq8Ec8-hAAVaD1zAVmVqw-p6U2XFHPw8dFq91I9xMrxH3ULI-d7xRQsQqHsdC0moyLQT9oHCQKJIABi8LIrOqm10hamESeAt6CvYqNiJYrxWqlyIlJPXvU0BfO7btKVlwkPQb0sBkKT25PykJYuCL4UoSxBulNKhUdawMYtAKq6GWPrX35c56p9w7gLGeAH3zyXmR4wXnn7O-onfRVU6vng3Enwur24VdF4tfGamkhybsafal6ilES20nX7rWahk8Z1orGuyvtzXDt-O76c
  customResources:
    - group: 'tekton.dev'
      apiVersion: 'v1'
      plural: 'pipelineruns'
    - group: 'tekton.dev'
      apiVersion: 'v1'
      plural: 'taskruns'
    - apiVersion: 'v1'
      group: 'route.openshift.io'
      plural: 'routes'